/**
 * Course: CSE 341
 * Semester and Year: Spring 2021
 * Assignment: Database Systems
 * Author: Derei, Tal
 * User ID: tad222
 */

import java.util.Scanner;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.sql.SQLException;
import java.io.*;
import java.sql.*;

/**
 * Insurance database for executing SQL queries using JBDC
 */
public class Insurance {
    private Connection connecting;
    private PreparedStatement createCustomer;
    private PreparedStatement addPolicy;
    private PreparedStatement dropPolicy;
    private PreparedStatement makeClaim;

    /**
     * Establish a connection to the Oracle database
     */
    public static Insurance connect_database(String user, String pass) {
        Insurance database = new Insurance();
        try (Connection connection = DriverManager.getConnection("jdbc:oracle:thin:@edgar1.cse.lehigh.edu:1521:cse241",user,pass);
        ) {
            System.out.println("Connection to the oracle database succeeded!\n");
            database.connecting = connection;
            customer_interface(database);        
        } catch (SQLException exception) {
            // exception.printStackTrace();
            System.out.println("connection to the oracle database failed! Try again!");
            return null;
        }
         return database;
    }

    /**
     * Command-line interface for customers
     */
    public static void customer_interface(Insurance database) {

        System.out.println("[1] Create a new customer in the database\n");
        System.out.println("[2] Add a policy\n");
        System.out.println("[3] Drop a policy\n");
        System.out.println("[4] Make a claim\n");
        System.out.println("[5] Add/remove/replace a vehicle\n");

        try {
            database.createCustomer = database.connecting.prepareStatement("INSERT INTO customer (CUSTOMER_ID, NAME, ADDRESS, AGE) VALUES (?,?,?,?)");
        }
        catch (SQLException exception) {
            // exception.printStackTrace();
            System.out.println("woops!");
        }

        int success = database.insertCustomer("12345", "hello", "oliver", "23");

        // try {
        //     PreparedStatement ps = database.connecting.prepareStatement("SELECT * from employee");
        //     ResultSet result = ps.executeQuery();
        //     if (!result.next()) {
        //         System.out.print("Empty result!");
        //     }
        //     else {
        //         String employee_id = result.getString("employee_id");
        //         String name = result.getString("name");

        //         System.out.println(employee_id + " employee_id");
        //         System.out.println(name + " name");
        //     }
        // }
        // catch (SQLException exception) {
        //     System.out.println("Error!");
        // }
    }

    /**
     * Command-line interface for agents
     */
    public void agent_interface(Insurance database) {
        System.out.println("[1] Identify customers with overdue bills\n");
        System.out.println("[2] Customers with pending claims that have not been serviced recently\n");
        System.out.println("[3] Compute revenue generated by the agent\n");
    }

    /**
     * Command-line interface for adjusters
     */
    public void adjuster_interface(Insurance database) {
        System.out.println("[1] Identify claims that have not been serviced recently\n");
        System.out.println("[2] Remediation firms or body shops to claims\n");
    }

    /**
     * Command-line interfaces for corperate management
     */
    public void corperate_interface(Insurance database) {
        System.out.println("[1] Generate report on revenue\n");
        System.out.println("[2] Generate report on claims paid\n");
        System.out.println("[3] Generate report on profits based on policy type\n");
        System.out.println("[4] Generate report on profitability of a customer\n");
    }

    public int insertCustomer(String customer_id, String name, String address, String age) {
        int success = 0;
        try {
            createCustomer.setString(1, customer_id);
            createCustomer.setString(2, name);
            createCustomer.setString(3, address);
            createCustomer.setString(4, age);
            success = createCustomer.executeUpdate();
        }
        catch (SQLException exception) {
            System.out.println("Error!");
            exception.printStackTrace();
        }
        return success;
    }
}